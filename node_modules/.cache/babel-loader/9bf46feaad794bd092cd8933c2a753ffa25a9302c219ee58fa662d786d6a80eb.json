{"ast":null,"code":"var _jsxFileName = \"C:\\\\love\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, CardContent, Typography, Button, Box, LinearProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  questions,\n  onComplete\n}) => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [unlockedParts, setUnlockedParts] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [showFunFact, setShowFunFact] = useState(false);\n  const [currentFunFact, setCurrentFunFact] = useState(\"\");\n  const currentQuestion = questions[currentQuestionIndex];\n  const handleAnswer = optionIndex => {\n    setSelectedOption(optionIndex);\n    const correct = optionIndex === currentQuestion.answer;\n    setIsCorrect(correct);\n    if (correct) {\n      setScore(score + 1);\n      setUnlockedParts([...unlockedParts, currentQuestion.partToUnlock]);\n      setCurrentFunFact(currentQuestion.funFact);\n      setShowFunFact(true);\n    }\n  };\n  const handleNextQuestion = () => {\n    setSelectedOption(null);\n    setIsCorrect(null);\n    setShowFunFact(false);\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      onComplete(score, unlockedParts);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: \"800px\",\n      mx: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: (currentQuestionIndex + 1) / questions.length * 100,\n      sx: {\n        mb: 4,\n        height: 8,\n        borderRadius: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          py: 4,\n          px: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          gutterBottom: true,\n          sx: {\n            mb: 4\n          },\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"grid\",\n            gridTemplateColumns: {\n              xs: \"1fr\",\n              sm: \"1fr 1fr\"\n            },\n            gap: 2,\n            mt: 2\n          },\n          children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n            variant: selectedOption === index ? \"contained\" : \"outlined\",\n            color: selectedOption === index ? isCorrect ? \"primary\" : \"error\" : \"inherit\",\n            onClick: () => !selectedOption && handleAnswer(index),\n            disabled: selectedOption !== null && selectedOption !== index,\n            sx: {\n              py: 2,\n              fontSize: \"1rem\",\n              justifyContent: \"flex-start\"\n            },\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), showFunFact && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            p: 2,\n            backgroundColor: \"rgba(138, 43, 226, 0.1)\",\n            borderLeft: \"4px solid #8a2be2\",\n            borderRadius: \"4px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              fontStyle: \"italic\"\n            },\n            children: [\"\\uD83D\\uDCA1 Fun Fact: \", currentFunFact]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: () => setShowFunFact(false),\n            sx: {\n              mt: 1,\n              color: \"#8a2be2\"\n            },\n            children: \"Fechar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), selectedOption !== null && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleNextQuestion,\n            sx: {\n              backgroundColor: \"#8a2be2\",\n              \"&:hover\": {\n                backgroundColor: \"#7b1fa2\"\n              }\n            },\n            children: currentQuestionIndex < questions.length - 1 ? \"PrÃ³xima\" : \"Ver Resultado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"fU2OKpujmoA4ghjrK6O2UYOLEBE=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","Button","Box","LinearProgress","jsxDEV","_jsxDEV","Quiz","questions","onComplete","_s","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","unlockedParts","setUnlockedParts","selectedOption","setSelectedOption","isCorrect","setIsCorrect","showFunFact","setShowFunFact","currentFunFact","setCurrentFunFact","currentQuestion","handleAnswer","optionIndex","correct","answer","partToUnlock","funFact","handleNextQuestion","length","sx","maxWidth","mx","children","variant","value","mb","height","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","py","px","component","gutterBottom","question","display","gridTemplateColumns","xs","sm","gap","mt","options","map","option","index","color","onClick","disabled","fontSize","justifyContent","p","backgroundColor","borderLeft","fontStyle","size","_c","$RefreshReg$"],"sources":["C:/love/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  LinearProgress,\r\n} from \"@mui/material\";\r\n\r\nconst Quiz = ({ questions, onComplete }) => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [unlockedParts, setUnlockedParts] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(null);\r\n  const [showFunFact, setShowFunFact] = useState(false);\r\n  const [currentFunFact, setCurrentFunFact] = useState(\"\");\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  const handleAnswer = (optionIndex) => {\r\n    setSelectedOption(optionIndex);\r\n    const correct = optionIndex === currentQuestion.answer;\r\n    setIsCorrect(correct);\r\n\r\n    if (correct) {\r\n      setScore(score + 1);\r\n      setUnlockedParts([...unlockedParts, currentQuestion.partToUnlock]);\r\n      setCurrentFunFact(currentQuestion.funFact);\r\n      setShowFunFact(true);\r\n    }\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    setSelectedOption(null);\r\n    setIsCorrect(null);\r\n    setShowFunFact(false);\r\n\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      onComplete(score, unlockedParts);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: \"800px\", mx: \"auto\" }}>\r\n      <LinearProgress\r\n        variant=\"determinate\"\r\n        value={((currentQuestionIndex + 1) / questions.length) * 100}\r\n        sx={{ mb: 4, height: 8, borderRadius: 4 }}\r\n      />\r\n\r\n      <Card>\r\n        <CardContent sx={{ py: 4, px: 4 }}>\r\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom sx={{ mb: 4 }}>\r\n            {currentQuestion.question}\r\n          </Typography>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: { xs: \"1fr\", sm: \"1fr 1fr\" },\r\n              gap: 2,\r\n              mt: 2,\r\n            }}\r\n          >\r\n            {currentQuestion.options.map((option, index) => (\r\n              <Button\r\n                key={index}\r\n                variant={selectedOption === index ? \"contained\" : \"outlined\"}\r\n                color={\r\n                  selectedOption === index\r\n                    ? isCorrect\r\n                      ? \"primary\"\r\n                      : \"error\"\r\n                    : \"inherit\"\r\n                }\r\n                onClick={() => !selectedOption && handleAnswer(index)}\r\n                disabled={selectedOption !== null && selectedOption !== index}\r\n                sx={{ py: 2, fontSize: \"1rem\", justifyContent: \"flex-start\" }}\r\n              >\r\n                {option}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n\r\n          {showFunFact && (\r\n            <Box\r\n              sx={{\r\n                mt: 3,\r\n                p: 2,\r\n                backgroundColor: \"rgba(138, 43, 226, 0.1)\",\r\n                borderLeft: \"4px solid #8a2be2\",\r\n                borderRadius: \"4px\",\r\n              }}\r\n            >\r\n              <Typography variant=\"body1\" sx={{ fontStyle: \"italic\" }}>\r\n                ð¡ Fun Fact: {currentFunFact}\r\n              </Typography>\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => setShowFunFact(false)}\r\n                sx={{ mt: 1, color: \"#8a2be2\" }}\r\n              >\r\n                Fechar\r\n              </Button>\r\n            </Box>\r\n          )}\r\n\r\n          {selectedOption !== null && (\r\n            <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", mt: 3 }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleNextQuestion}\r\n                sx={{\r\n                  backgroundColor: \"#8a2be2\",\r\n                  \"&:hover\": { backgroundColor: \"#7b1fa2\" },\r\n                }}\r\n              >\r\n                {currentQuestionIndex < questions.length - 1\r\n                  ? \"PrÃ³xima\"\r\n                  : \"Ver Resultado\"}\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}